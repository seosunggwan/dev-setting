server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      force: true
      force-request: true
      force-response: true
      enabled: true
    context-path: /api
    session:
      timeout: 120s
  tomcat:
    connection-timeout: 120000

logging:
  level:
    org.springframework: info

spring:
  profiles:
    active: local   # ✅ 로컬 실행 시 기본 프로파일

  datasource:
    url: jdbc:mysql://localhost:3306/portfolio?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: portfolio_user
    password: ${RDS_PASSWORD:portfolio1234}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 32

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    database-platform: org.hibernate.dialect.MySQL8Dialect

  data:
    redis:
      host: localhost   # ✅ 로컬 실행 → localhost
      port: 6379
      password: ${REDIS_PASSWORD:1234}

  kafka:
    bootstrap-servers: localhost:9093   # ✅ docker-compose에서 외부 포트 9093 노출

  elasticsearch:
    uris: http://localhost:9200   # ✅ 로컬 접속

  jwt:
    secret: ${JWT_SECRET:local-jwt-secret-1234}
    token-validity-in-seconds: 86400

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID:your-naver-client-id}
            client-secret: ${NAVER_CLIENT_SECRET:your-naver-secret}
            redirect-uri: http://localhost:8080/api/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name,email

          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-secret}
            redirect-uri: http://localhost:8080/api/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile,email

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  cloud:
    aws:
      s3:
        bucket: ${AWS_S3_BUCKET:your-s3-bucket}
      stack:
        auto: false
      region:
        static: ${AWS_REGION:ap-northeast-2}
      credentials:
        access-key: ${AWS_ACCESS_KEY:your-aws-access-key}
        secret-key: ${AWS_SECRET_KEY:your-aws-secret-key}

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,info,prometheus
  endpoint:
    health:
      show-details: always