server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      force: true
      "force-request": true
      "force-response": true
      enabled: true
    context-path: /api  # 모든 API 엔드포인트에 /api 접두사 추가
    session:
      timeout: 120s     # 세션 타임아웃
  tomcat:
    connection-timeout: 120000  # 120초

logging:
  level:
    org.springframework: info
# TODO: BulkInsert 모니터링 - 아래 주석을 해제해야함
#    com.mysql.cj: trace

# ? ??? ?? ??
spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

---
# ? ?? ?? ?? ??
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:mysql://${RDS_ENDPOINT:db}:3306/portfolio?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&useSSL=false&rewriteBatchedStatements=true
    username: portfolio_user
    password: ${RDS_PASSWORD:portfolio1234}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 32
  # // TODO: Named Lock 을 위해 아래 주석을 해제해야함
  #    hikari:
  #      maximum-pool-size: 64

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    database-platform: org.hibernate.dialect.MySQL8Dialect

  data:
    redis:
      host: redis
      port: 6379
      password: 1234

  # JWT 설정
  jwt:
    secret: ${JWT_SECRET:your-256-bit-secret-your-256-bit-secret-your-256-bit-secret-your-256-bit-secret}
    token-validity-in-seconds: 86400  # 24시간

  security:
    oauth2:
      client:
        registration:
          naver:
            "client-name": naver
            "client-id": ${NAVER_CLIENT_ID:your-naver-client-id}
            "client-secret": ${NAVER_CLIENT_SECRET:your-naver-client-secret}
            "redirect-uri": http://localhost:8080/api/login/oauth2/code/naver
            "authorization-grant-type": authorization_code
            scope: name,email

          google:
            "client-name": google
            "client-id": ${GOOGLE_CLIENT_ID:your-google-client-id}
            "client-secret": ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            "redirect-uri": http://localhost:8080/api/login/oauth2/code/google
            "authorization-grant-type": authorization_code
            scope: profile,email

        provider:
          naver:
            "authorization-uri": https://nid.naver.com/oauth2.0/authorize
            "token-uri": https://nid.naver.com/oauth2.0/token
            "user-info-uri": https://openapi.naver.com/v1/nid/me
            "user-name-attribute": response
          
          google:
            "authorization-uri": https://accounts.google.com/o/oauth2/auth
            "token-uri": https://oauth2.googleapis.com/token
            "user-info-uri": https://www.googleapis.com/oauth2/v3/userinfo
            "user-name-attribute": sub
  # AWS ??
  cloud:
    aws:
      s3:
        bucket: ${AWS_S3_BUCKET:your-s3-bucket}
      stack:
        auto: false
      region:
        static: ${AWS_REGION:ap-northeast-2}
      credentials:
        "access-key": ${AWS_ACCESS_KEY:your-aws-access-key}
        "secret-key": ${AWS_SECRET_KEY:your-aws-secret-key}

management:
  endpoints:
    web:
      exposure:
        include: "health,metrics,info,prometheus"
  endpoint:
    health:
      show-details: always  # 상세한 헬스 정보 표시