server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      force: true
      force-request: true
      force-response: true
      enabled: true
    context-path: /api
    session:
      timeout: 120s
  tomcat:
    connection-timeout: 120000

logging:
  level:
    org.springframework: info

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

  web:
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS}

  datasource:
    url: jdbc:mysql://${RDS_ENDPOINT}:3306/instagram?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 32

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    database-platform: org.hibernate.dialect.MySQL8Dialect

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST}
      port: ${SPRING_DATA_REDIS_PORT}
      password: ${SPRING_DATA_REDIS_PASSWORD}

  jwt:
    secret: ${JWT_SECRET}
    token-validity-in-seconds: 86400

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID:your-naver-client-id}
            client-secret: ${NAVER_CLIENT_SECRET:your-naver-client-secret}
            redirect-uri: http://localhost:8080/api/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name,email

          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            redirect-uri: http://localhost:8080/api/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile,email

          github:
            client-name: github
            client-id: ${GITHUB_CLIENT_ID:your-github-client-id}
            client-secret: ${GITHUB_CLIENT_SECRET:your-github-client-secret}
            redirect-uri: http://localhost:8080/api/login/oauth2/code/github
            authorization-grant-type: authorization_code
            scope: read:user

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ${AWS_REGION}
      stack:
        auto: false
      s3:
        bucket: ${AWS_S3_BUCKET}

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,info,prometheus
  endpoint:
    health:
      show-details: always
