version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: db-prod
    environment:
      MYSQL_DATABASE: portfolio
      MYSQL_USER: portfolio_user
      MYSQL_PASSWORD: ${RDS_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${RDS_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "portfolio_user", "--password=${RDS_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2GB

  app:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-app-prod
    ports:
      - "8080:8080"
    environment:
      # Database Configuration
      RDS_ENDPOINT: db
      RDS_PASSWORD: ${RDS_PASSWORD}
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      # OAuth2 Configuration
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      # AWS S3 Configuration
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      # Redis Configuration
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      # JVM Configuration
      JAVA_OPTS: "-Xms512m -Xmx1g"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - internal

  redis:
    image: redis:7.0
    container_name: redis-server-prod
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - internal
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: react-app-prod
    ports:
      - "80:80"
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    networks:
      - internal
    depends_on:
      - app
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

volumes:
  mysql_data:
  redis_data:

networks:
  internal:
    driver: bridge 